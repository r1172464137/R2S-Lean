name: R2S_Lean.yml

on:
  watch:
    types: started

jobs:
  build:
    runs-on: ubuntu-18.04
    if: github.event.repository.owner.id == github.event.sender.id

    steps:

      - name: Checkout Project
        uses: actions/checkout@v1

      - name: Initialize Environment
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          docker image prune -a -f
          sudo rm -rf /usr/share/dotnet /usr/local/lib/android /opt/ghc
          sudo -E apt-get update
          sudo -E apt-get -y install build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch python3 unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex uglifyjs gcc-multilib g++-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint device-tree-compiler antlr3 gperf swig
          wget -O- https://raw.githubusercontent.com/friendlyarm/build-env-on-ubuntu-bionic/master/install.sh | bash
          sudo -E apt-get -y autoremove --purge
          sudo -E apt-get clean
          git config --global user.name "GitHub Action"
          git config --global user.email "action@github.com"
          
      - name: Free Disk Space
        run: |
          sudo swapoff -a
          sudo rm -f /swapfile
          sudo apt clean
          sudo rm -rf "/usr/local/share/boost"
          sudo rm -rf "$AGENT_TOOLSDIRECTORY"

      - name: Clone fanck0605 Repo
        run: |
          git clone -b openwrt-lean https://github.com/fanck0605/openwrt-nanopi-r2s.git
          cd openwrt-nanopi-r2s
          rm -rf ./patches/*default-ipaddr*.patch
          rm -rf ./patches/*samba36*.patch
          rm -rf ./patches/*author*.patch
          rm -rf ./patches/*wan*lan*.patch
          git show -s --format=%aD

      - name: Clone Lean Repo
        run: |
          cd openwrt-nanopi-r2s
          git clone -b master https://github.com/coolsnowwolf/lede.git
          cd lede && git am -3 ../patches/*.patch

      - name: Install Extra Packages
        run: |
          sudo chown -R runner:runner openwrt-nanopi-r2s
          cd openwrt-nanopi-r2s
          cd lede/package/lean

          # install JD-DailyBonus
          sudo rm -rf node-request
          sudo rm -rf luci-app-jd-dailybonus
          git clone https://github.com/jerrykuku/node-request
          git clone https://github.com/jerrykuku/luci-app-jd-dailybonus
          
          # upgrade argon theme
          rm -rf luci-theme-argon
          git clone --depth 1 -b 18.06 https://github.com/jerrykuku/luci-theme-argon.git
          cd luci-theme-argon/htdocs/luci-static/argon/img
          wget https://raw.githubusercontent.com/jerrykuku/luci-theme-argon/master/htdocs/luci-static/argon/img/bg3.jpg
          rm -rf bg1.jpg
          mv bg3.jpg bg1.jpg
          
      - name: Initialize Feeds
        run: |
          cd openwrt-nanopi-r2s
          wk_dir=$(pwd)
          p_list=$(ls -l patches | grep ^d | awk '{print $NF}')
          cd lede
          ./scripts/feeds update -a
          cd feeds
          for p in $p_list ; do
            [ -d $p ] && {
              cd $p
              git am -3 $wk_dir/patches/$p/*.patch
              cd ..
            }
          done

      - name: Install Feeds
        run: |
          cd openwrt-nanopi-r2s
          cd lede
          ./scripts/feeds install -a

      - name: Make Config
        run: |
          cd openwrt-nanopi-r2s
          cd lede
          cat ../../config.seed > .config
          sed -i '/uci commit luci/i\uci set luci.main.mediaurlbase="/luci-static/argon"' package/lean/default-settings/files/zzz-default-settings
          sed -i '/root::0:0:99999:7:::/d'  package/lean/default-settings/files/zzz-default-settings
          sed -i 's/org\/openwrt.proxy.ustclug.org/org\/mirrors.cloud.tencent.com\\\/lede/g' package/lean/default-settings/files/zzz-default-settings
          sed -i '/exit 0/d' package/lean/default-settings/files/zzz-default-settings
          echo "sed -i '/helloworld/d' /etc/opkg/distfeeds.conf" >> package/lean/default-settings/files/zzz-default-settings
          echo "exit 0" >> package/lean/default-settings/files/zzz-default-settings
          make defconfig

      - name: Compile Lean-OpenWrt
        run: |
          cd openwrt-nanopi-r2s
          cd lede
          make download -j8
          make -j$(nproc) || make -j1 V=s

      - name: Cleaning
        run: |
          mkdir artifact/
          cd ./openwrt-nanopi-r2s/lede/bin/targets/rockchip/armv8
          gzip -d *.gz && exit 0
          gzip *.img
          rm -rf packages
          mv * ../../../../../../artifact
          cd ../../../../../../artifact
          zip artifact.zip *
          mv artifact.zip ..
      
      - name: Assemble Artifact
        id: assemble_artifact
        env:
          TZ: Asia/Shanghai
        run: |
          time=$(date +%Y%m%d%H%M)
          release_tag=$time
          release_name="Lean-RikudouPatrickstar-$time"
          echo "##[set-output name=release_name;]$release_name"
          echo "##[set-output name=release_tag;]$release_tag"

      - name: Upload Artifact
        uses: actions/upload-artifact@master
        with:
          name: ${{ steps.assemble_artifact.outputs.release_name }}
          path: ./artifact

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.assemble_artifact.outputs.release_tag }}
          release_name:  ${{ steps.assemble_artifact.outputs.release_name }}
          draft: false
          prerelease: false

      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: ./artifact.zip
          asset_name: ${{ steps.assemble_artifact.outputs.release_name }}.zip
          asset_content_type: application/zip
